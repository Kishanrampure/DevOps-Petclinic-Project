pipeline {
    agent any
 tools {
        maven 'M3'
        jdk 'jdk'
    }
    options {
        skipStagesAfterUnstable()
    }
    stages{
        stage('SCM Fetch From deployment') {
        steps{
            git branch: 'deployment', url: 'https://github.com/Kishanrampure/DevOps-Petclinic-Project.git'
            }
        }
         stage('Docker Build') {
          steps {
                sh 'chmod +x mvnw'
                sh 'chmod +x ./mvnw'
                sh 'docker build -t kishanrampure/petclinic:v57052024 .'
            }
        }
        stage('Docker Image Test'){
        steps {
                sh 'trivy image kishanrampure/petclinic:v57052024'
            }
        }
        stage('Trivy FS Check CD') {
        steps {
                sh "trivy fs ."
            }
        }
        stage('Push image to dockerhub') {
        steps {
          withCredentials([usernamePassword(credentialsId: 'docker-cred', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
             sh 'docker login -u $USERNAME -p $PASSWORD'
             sh 'docker push kishanrampure/petclinic:v57052024'
          }
        }
      }
        stage('Git Push to main') {
	  environment {
                commitmsg = "'codeChanges'"
            }
        steps {
	       script{
                   withCredentials([
                    gitUsernamePassword(credentialsId: 'mygitid', gitToolName: 'Default')
                    ] ) {
                    sh '''
                    git add .
                    git branch -M main
		            git remote -v
                    git status
		            git commit -a -m ${commitmsg}
                    git push -u origin main --force
                    '''
                    }
                }
            } 
        }
    }
} 
